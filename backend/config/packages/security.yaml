security:

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    firewalls:
        dev:
            pattern: ^/_(profiler|wdt)
            security: false
        api:
            pattern: ^/api
            stateless: true
            provider: user_provider
            jwt: ~
        main:
            json_login:
                check_path: auth # The name in routes.yaml is enough for mapping
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

    role_hierarchy:
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ALLOWED_TO_SWITCH]
        ROLE_ADMIN:       [ROLE_USER, ROLE_MANAGER, ROLE_COACH]
        ROLE_MANAGER:     ROLE_USER
        ROLE_COACH:       ROLE_USER
        ROLE_USER:        []

    access_control:
        - { path: ^/api$, roles: PUBLIC_ACCESS } # Autorise uniquement l'accès à la racine de l'API
        - { path: ^/auth, roles: PUBLIC_ACCESS }
        - { path: ^/api/franchises, roles: PUBLIC_ACCESS }
        - { path: ^/api/prestations/[\d]+, methods: GET, roles: PUBLIC_ACCESS }
        - { path: ^/api/coaches/[\d]+, methods: GET, roles: PUBLIC_ACCESS }
        - { path: ^/api/review_coaches, methods: [POST, PATCH], roles: ROLE_USER }
        - { path: ^/api/review_clients, methods: [POST, PATCH], roles: ROLE_COACH }
        - { path: ^/api/users, methods: POST, roles: PUBLIC_ACCESS }
        - { path: ^/api/users, methods: GET, roles: PUBLIC_ACCESS }
        - { path: ^/api/managers, methods: POST, roles: PUBLIC_ACCESS }
        - { path: ^/, roles: IS_AUTHENTICATED_FULLY }

        # role admin
        - { path: ^/admin, roles: ROLE_ADMIN }

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        user_provider:
            entity:
                class: App\Entity\User
                property: email
    # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: md5
                encode_as_base64: false
                iterations: 0
