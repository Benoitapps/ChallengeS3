# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\State\UserPasswordHasher:
        bind:
            $processor: '@api_platform.doctrine.orm.state.persist_processor'
    
    App\Doctrine\Extensions\FindFranchisesExtension:
        tags:
            - { name: api_platform.doctrine.orm.query_extension.collection }
            - { name: api_platform.doctrine.orm.query_extension.item }


    App\Doctrine\Extensions\CurrentUserSlotExtension:
        tags:
            - { name: api_platform.doctrine.orm.query_extension.collection }

#    App\Doctrine\Extensions\CurrentUserFranchiseExtension:
#        tags:
#            - { name: api_platform.doctrine.orm.query_extension.collection }


    App\EventListener\JwtCreatedListener:
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJwtCreated }


    # ? Cache
#    api_platform.cache.metadata.property:
#        parent: cache.system
#        tags: [ cache.pool ]
#    api_platform.cache.metadata.resource:
#        parent: cache.system
#        tags: [ cache.pool ]
#    api_platform.cache.metadata.resource_collection:
#        parent: cache.system
#        tags: [ cache.pool ]
#    api_platform.cache.route_name_resolver:
#        parent: cache.system
#        tags: [ cache.pool ]
#    api_platform.cache.identifiers_extractor:
#        parent: cache.system
#        tags: [ cache.pool ]
#    api_platform.elasticsearch.cache.metadata.document:
#        parent: cache.system
#        tags: [ cache.pool ]